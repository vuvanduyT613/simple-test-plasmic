// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: xoGoYnzcgCWsQgugY2n8Ua
// Component: Tdi0Yncr_QpGK
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header from "../../Header"; // plasmic-import: -tzxWiNyeKkUv/component
import ProductCarousel from "../../ProductCarousel"; // plasmic-import: AVMdMJWISO8LaO/component
import ProductCard from "../../ProductCard"; // plasmic-import: 6N0WD1qlM1A7DM/component
import Ratings from "../../Ratings"; // plasmic-import: wxPX1t5v8jMyKZ/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: 87sCTHcuocFFN/component
import BlogPost from "../../BlogPost"; // plasmic-import: 1t4CC9i21WKpft/component
import Footer from "../../Footer"; // plasmic-import: _lt7Piwzx9NEs/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: VcS_Pbeu58CkWY/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_furn_e_commerce.module.css"; // plasmic-import: xoGoYnzcgCWsQgugY2n8Ua/projectcss
import * as sty from "./PlasmicHome.module.css"; // plasmic-import: Tdi0Yncr_QpGK/css

export type PlasmicHome__VariantMembers = {};

export type PlasmicHome__VariantsArgs = {};
type VariantPropType = keyof PlasmicHome__VariantsArgs;
export const PlasmicHome__VariantProps = new Array<VariantPropType>();

export type PlasmicHome__ArgsType = {};
type ArgPropType = keyof PlasmicHome__ArgsType;
export const PlasmicHome__ArgProps = new Array<ArgPropType>();

export type PlasmicHome__OverridesType = {
  root?: p.Flex<"div">;
  header?: p.Flex<typeof Header>;
  productCarousel?: p.Flex<typeof ProductCarousel>;
  featureItem?: p.Flex<typeof FeatureItem>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultHomeProps {
  className?: string;
}

function PlasmicHome__RenderFunc(props: {
  variants: PlasmicHome__VariantsArgs;
  args: PlasmicHome__ArgsType;
  overrides: PlasmicHome__OverridesType;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <React.Fragment>
      <Head>
        <title key="title">{""}</title>
      </Head>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div className={classNames(defaultcss.all, sty.box__eg11D)}>
            <Header
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames("__wab_instance", sty.header)}
            />

            <ProductCarousel
              data-plasmic-name={"productCarousel"}
              data-plasmic-override={overrides.productCarousel}
              className={classNames("__wab_instance", sty.productCarousel)}
            />

            <div className={classNames(defaultcss.all, sty.box__zwwuY)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__rvgbi
                )}
              >
                {"New Arrivals"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box___7UwLd)}
            >
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__gjpnG)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__lemM6)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/arrivals1.png"}
                  />
                }
                onSale={"onSale" as const}
                price={"$65.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__tGYzj)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Wooden Chair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__cuMdi)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__xtb1M)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/arrivals2.png"}
                  />
                }
                onSale={"onSale" as const}
                price={"$80.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__rSjgV)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Single Armchair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__efSbU)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__vuFBx)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/arrivals3.png"}
                  />
                }
                price={"$40.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__tjP1)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Wooden Armchair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__tjjar)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___0Sjov)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/arrivals4.png"}
                  />
                }
                onSale={"onSale" as const}
                price={"$100.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings___0E3B)}
                    numReviews={"(45 Review)"}
                  />
                }
                title={"Stylish Chair"}
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__vcMtj)}
            >
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__fwTyX)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___2LhXl)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/arrivals5.png"}
                  />
                }
                price={"$120.00"}
                title={"Modern Chair"}
              />

              <ProductCard
                className={classNames(
                  "__wab_instance",
                  sty.productCard___5PtKe
                )}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___25NUe)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/arrivals6.png"}
                  />
                }
                onSale={"onSale" as const}
                price={"$140.00"}
                title={"Mapple Wood Dinning Table"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__bmLtF)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__dx2Wa)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/arrivals7.png"}
                  />
                }
                onSale={"onSale" as const}
                price={"$90.00"}
                title={"Arm Chair"}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard___4Fg)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__gH6Kr)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/arrivals8.png"}
                  />
                }
                price={"$140.00"}
                title={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__wMVe
                    )}
                  >
                    {"Wooden Bed"}
                  </div>
                }
              />
            </p.Stack>

            <FeatureItem
              data-plasmic-name={"featureItem"}
              data-plasmic-override={overrides.featureItem}
              className={classNames("__wab_instance", sty.featureItem)}
            />

            <div className={classNames(defaultcss.all, sty.box__mvTbB)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__dYFfJ
                )}
              >
                {"Featured Products"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__jDlzw)}
            >
              <ProductCard
                className={classNames("__wab_instance", sty.productCard__czc2R)}
                price={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__i9Aj
                    )}
                  >
                    {"$160.00"}
                  </div>
                }
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__hr9U5)}
                    numReviews={"(12 Review)"}
                    stars={"two" as const}
                  />
                }
                title={
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box___7Qd3B
                    )}
                  >
                    {"Designed Sofa"}
                  </div>
                }
                withReviews={"withReviews" as const}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__ndOJi)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___2VgFb)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/f2.jpeg"}
                  />
                }
                price={"$200.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__w9Pmi)}
                    stars={"four" as const}
                  />
                }
                title={"Dining Table"}
                withReviews={"withReviews" as const}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__mVvkc)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__cGztw)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/f3.jpeg"}
                  />
                }
                price={"$100.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__wd3HH)}
                    numReviews={"(23 Review)"}
                    stars={"five" as const}
                  />
                }
                title={"Chair and Table"}
                withReviews={"withReviews" as const}
              />

              <ProductCard
                className={classNames("__wab_instance", sty.productCard__oe0Ru)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___4UfFq)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/f4.jpeg"}
                  />
                }
                price={"$299.00"}
                ratings={
                  <Ratings
                    className={classNames("__wab_instance", sty.ratings__xaS5P)}
                    numReviews={"(35 Review)"}
                  />
                }
                title={"Modern Arm Chair"}
                withReviews={"withReviews" as const}
              />
            </p.Stack>

            <div className={classNames(defaultcss.all, sty.box___3T1TC)}>
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__ohnQh
                )}
              >
                {"Latest Blog"}
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__vxf3O)}
            >
              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__amMuE)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___6VqrT)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/b1.jpeg"}
                  />
                }
              />

              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__stxHi)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img___0JOv)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/b2.jpeg"}
                  />
                }
              />

              <BlogPost
                className={classNames("__wab_instance", sty.blogPost__rxCyg)}
                image={
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__fsq5C)}
                    role={"img"}
                    src={"/plasmic/furn_e_commerce/images/b3.jpeg"}
                  />
                }
              />
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__fLcpe)}
            >
              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__k7AD)}
                role={"img"}
                src={"/plasmic/furn_e_commerce/images/adidas.png"}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__mkfZn)}
                role={"img"}
                src={"/plasmic/furn_e_commerce/images/hm.png"}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img___9B8Uf)}
                role={"img"}
                src={"/plasmic/furn_e_commerce/images/kappa.png"}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__t4EGi)}
                role={"img"}
                src={"/plasmic/furn_e_commerce/images/lacoste.png"}
              />

              <img
                alt={""}
                className={classNames(defaultcss.img, sty.img__arvJa)}
                role={"img"}
                src={"/plasmic/furn_e_commerce/images/levis.png"}
              />
            </p.Stack>

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer)}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "header", "productCarousel", "featureItem", "footer"],
  header: ["header"],
  productCarousel: ["productCarousel"],
  featureItem: ["featureItem"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<
  T extends NodeNameType
> = typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  header: typeof Header;
  productCarousel: typeof ProductCarousel;
  featureItem: typeof FeatureItem;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> = { // Explicitly specify variants, args, and overrides as objects
  variants?: PlasmicHome__VariantsArgs;
  args?: PlasmicHome__ArgsType;
  overrides?: NodeOverridesType<T>;
} & Omit<PlasmicHome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
  // Specify args directly as props
  Omit<PlasmicHome__ArgsType, ReservedPropsType> &
  // Specify overrides for each element directly as props
  Omit<
    NodeOverridesType<T>,
    ReservedPropsType | VariantPropType | ArgPropType
  > &
  // Specify props for the root element
  Omit<
    Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
    ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
  >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps
    });

    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHome";
  } else {
    func.displayName = `PlasmicHome.${nodeName}`;
  }
  return func;
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header: makeNodeComponent("header"),
    productCarousel: makeNodeComponent("productCarousel"),
    featureItem: makeNodeComponent("featureItem"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps
  }
);

export default PlasmicHome;
/* prettier-ignore-end */
